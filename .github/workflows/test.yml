name: test

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  run:
    name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Ensure latest pip
      run: python -m pip install --upgrade pip

    - name: Install hatch
      run: |
        pip install hatch

    - if: matrix.python-version == '3.9' && runner.os == 'Linux'
      name: Lint
      run: hatch run lint:all

    - name: Run tests
      run: hatch run cov --junitxml=pytest.xml

    # - task: PublishTestResults@2
    #   inputs:
    #     testResultsFormat: 'JUnit'
    #     testResultsFiles: 'pytest.xml'
    #     # testRunTitle: ${{ format('{0}-{1}-$(Agent.JobName)', matrix.python-version, runner.os) }}
    #   displayName: 'Publish Test Results'
    #   condition: succeededOrFailed()